{"ast":null,"code":"var _jsxFileName = \"/home/santosh/Documents/Live Projects/HHG-Case-study-2021/HHG-Case-study-2021/src/components/DataTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport CustomInput from \"./CustomInput\";\nimport Button from \"./Button\";\nimport axios from 'axios';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Modal from '@material-ui/core/Modal';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}));\n\nfunction TablePaginationActions(props) {\n  _s();\n\n  const classes = useStyles1();\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onChangePage\n  } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"first page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 65\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"previous page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 71\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleNextButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"next page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 70\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"last page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 66\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TablePaginationActions, \"KqsuGf3FnFNq6eN80CYbjOwL8vo=\", false, function () {\n  return [useStyles1, useTheme];\n});\n\n_c = TablePaginationActions;\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nfunction createData(name, calories, fat) {\n  return {\n    name,\n    calories,\n    fat\n  };\n}\n\nconst useStyles2 = makeStyles(theme => ({\n  table: {\n    minWidth: 500\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default function CustomPaginationActionsTable() {\n  _s2();\n\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [name, setname] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [position, setposition] = useState(\"\");\n  const [rows, setrows] = useState([]);\n  const [openSnack, setopenSnack] = useState(false);\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCloseSnack = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setopenSnack(false);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n    axios.get('https://60a504bbfbd48100179dd8f5.mockapi.io/api/v1/users').then(function (response) {\n      // handle success\n      console.log(response);\n      setrows(response.data);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).then(function () {// always executed\n    });\n  }, []);\n\n  const submitAddUser = () => {\n    axios.post('https://60a504bbfbd48100179dd8f5.mockapi.io/api/v1/users', {\n      name,\n      email,\n      position\n    }).then(function (response) {\n      // handle success\n      console.log(response);\n      setrows([...row, response.data]);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).then(function () {\n      // always executed\n      setopenSnack(true);\n      handleClose();\n      axios.get('https://60a504bbfbd48100179dd8f5.mockapi.io/api/v1/users').then(function (response) {\n        // handle success\n        console.log(response);\n        setrows(response.data);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {// always executed\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        color: \"primary\",\n        className: \"form__custom-button\",\n        onClick: handleOpen,\n        children: \"Open Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"custom pagination table\",\n      children: [/*#__PURE__*/_jsxDEV(TableBody, {\n        children: [(rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 29\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this)), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n          style: {\n            height: 53 * emptyRows\n          },\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TablePagination, {\n            rowsPerPageOptions: [5, 10, 25, {\n              label: 'All',\n              value: -1\n            }],\n            colSpan: 3,\n            count: rows.length,\n            rowsPerPage: rowsPerPage,\n            page: page,\n            SelectProps: {\n              inputProps: {\n                'aria-label': 'rows per page'\n              },\n              native: true\n            },\n            onChangePage: handleChangePage,\n            onChangeRowsPerPage: handleChangeRowsPerPage,\n            ActionsComponent: TablePaginationActions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnack,\n      autoHideDuration: 600,\n      onClose: handleCloseSnack,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnack,\n        severity: \"success\",\n        children: \"User Added successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      \"aria-labelledby\": \"transition-modal-title\",\n      \"aria-describedby\": \"transition-modal-description\",\n      className: classes.modal,\n      open: open,\n      onClose: handleClose,\n      closeAfterTransition: true,\n      BackdropComponent: Backdrop,\n      BackdropProps: {\n        timeout: 500\n      },\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        in: open,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"transition-modal-title\",\n            children: \"ADD USER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n              labelText: \"Name\",\n              id: \"name\",\n              formControlProps: {\n                fullWidth: true\n              },\n              handleChange: e => setname(e.currentTarget.value),\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n              labelText: \"Email\",\n              id: \"email\",\n              formControlProps: {\n                fullWidth: true\n              },\n              handleChange: e => setemail(e.currentTarget.value),\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n              labelText: \"Position\",\n              id: \"position\",\n              formControlProps: {\n                fullWidth: true\n              },\n              handleChange: e => setposition(e.currentTarget.value),\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"primary\",\n              className: \"form__custom-button\",\n              onClick: () => submitAddUser(),\n              children: \"ADD USER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(CustomPaginationActionsTable, \"dmHalC97E7aUEysrMvY8bdMNRrY=\", false, function () {\n  return [useStyles2];\n});\n\n_c2 = CustomPaginationActionsTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TablePaginationActions\");\n$RefreshReg$(_c2, \"CustomPaginationActionsTable\");","map":{"version":3,"sources":["/home/santosh/Documents/Live Projects/HHG-Case-study-2021/HHG-Case-study-2021/src/components/DataTable.js"],"names":["React","useEffect","useState","PropTypes","makeStyles","useTheme","Table","TableBody","TableCell","TableContainer","TableFooter","TablePagination","TableRow","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","Backdrop","Fade","CustomInput","Button","axios","Snackbar","Modal","Alert","AlertTitle","rand","Math","round","random","getModalStyle","top","left","transform","useStyles1","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","max","ceil","direction","propTypes","number","isRequired","func","createData","name","calories","fat","useStyles2","table","minWidth","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","CustomPaginationActionsTable","setPage","setRowsPerPage","modalStyle","open","setOpen","setname","email","setemail","position","setposition","rows","setrows","openSnack","setopenSnack","emptyRows","min","length","handleOpen","handleCloseSnack","reason","handleClose","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","get","then","response","console","log","data","catch","error","submitAddUser","post","row","width","slice","map","height","label","inputProps","native","timeout","fullWidth","e","currentTarget"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport CustomInput from \"./CustomInput\";\nimport Button from \"./Button\";\nimport axios from 'axios'\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport Modal from '@material-ui/core/Modal';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles1 = makeStyles((theme) => ({\n    root: {\n        flexShrink: 0,\n        marginLeft: theme.spacing(2.5),\n    },\n}));\n\nfunction TablePaginationActions(props) {\n    const classes = useStyles1();\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onChangePage } = props;\n\n    const handleFirstPageButtonClick = (event) => {\n        onChangePage(event, 0);\n    };\n\n    const handleBackButtonClick = (event) => {\n        onChangePage(event, page - 1);\n    };\n\n    const handleNextButtonClick = (event) => {\n        onChangePage(event, page + 1);\n    };\n\n    const handleLastPageButtonClick = (event) => {\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n\n    return (\n        <div className={classes.root}>\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n                aria-label=\"first page\"\n            >\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n            </IconButton>\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"next page\"\n            >\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"last page\"\n            >\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n            </IconButton>\n        </div>\n    );\n}\n\nTablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n    return { name, calories, fat };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n    table: {\n        minWidth: 500,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nexport default function CustomPaginationActionsTable() {\n    const classes = useStyles2();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n    const [name, setname] = useState(\"\")\n    const [email, setemail] = useState(\"\")\n    const [position, setposition] = useState(\"\")\n    const [rows, setrows] = useState([])\n    const [openSnack, setopenSnack] = useState(false)\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    const handleCloseSnack = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setopenSnack(false);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    useEffect(() => {\n        axios.get('https://60a504bbfbd48100179dd8f5.mockapi.io/api/v1/users')\n            .then(function (response) {\n                // handle success\n                console.log(response);\n                setrows(response.data)\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n            .then(function () {\n                // always executed\n            });\n    }, [])\n\n    const submitAddUser = () => {\n        axios.post('https://60a504bbfbd48100179dd8f5.mockapi.io/api/v1/users', {\n            name,\n            email,\n            position\n        })\n            .then(function (response) {\n                // handle success\n                console.log(response);\n                setrows([...row, response.data])\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n            .then(function () {\n                // always executed\n                setopenSnack(true)\n                handleClose()\n                axios.get('https://60a504bbfbd48100179dd8f5.mockapi.io/api/v1/users')\n                    .then(function (response) {\n                        // handle success\n                        console.log(response);\n                        setrows(response.data)\n                    })\n                    .catch(function (error) {\n                        // handle error\n                        console.log(error);\n                    })\n                    .then(function () {\n                        // always executed\n                    });\n            });\n    }\n\n    return (\n        <TableContainer component={Paper}>\n            <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\n                <Button type=\"button\" color=\"primary\" className=\"form__custom-button\" onClick={handleOpen}>\n                    Open Modal\n            </Button>\n            </div>\n            <Table className={classes.table} aria-label=\"custom pagination table\">\n                <TableBody>\n                    {(rowsPerPage > 0\n                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        : rows\n                    ).map((row) => (\n                        <TableRow key={row.name}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.name}\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                {row.email}\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                {row.position}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n\n                    {emptyRows > 0 && (\n                        <TableRow style={{ height: 53 * emptyRows }}>\n                            <TableCell colSpan={6} />\n                        </TableRow>\n                    )}\n                </TableBody>\n                <TableFooter>\n                    <TableRow>\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                            colSpan={3}\n                            count={rows.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            SelectProps={{\n                                inputProps: { 'aria-label': 'rows per page' },\n                                native: true,\n                            }}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                            ActionsComponent={TablePaginationActions}\n                        />\n                    </TableRow>\n                </TableFooter>\n            </Table>\n            <Snackbar open={openSnack} autoHideDuration={600} onClose={handleCloseSnack}>\n                <Alert onClose={handleCloseSnack} severity=\"success\">\n                    User Added successfully!\n                </Alert>\n            </Snackbar>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <h2 id=\"transition-modal-title\">ADD USER</h2>\n                        <form className=\"form\">\n                            <CustomInput\n                                labelText=\"Name\"\n                                id=\"name\"\n                                formControlProps={{\n                                    fullWidth: true\n                                }}\n                                handleChange={(e) => setname(e.currentTarget.value)}\n                                type=\"text\"\n                            />\n                            <CustomInput\n                                labelText=\"Email\"\n                                id=\"email\"\n                                formControlProps={{\n                                    fullWidth: true\n                                }}\n                                handleChange={(e) => setemail(e.currentTarget.value)}\n                                type=\"text\"\n                            />\n                            <CustomInput\n                                labelText=\"Position\"\n                                id=\"position\"\n                                formControlProps={{\n                                    fullWidth: true\n                                }}\n                                handleChange={(e) => setposition(e.currentTarget.value)}\n                                type=\"text\"\n                            />\n                            <Button type=\"button\" color=\"primary\" className=\"form__custom-button\" onClick={() => submitAddUser()}>\n                                ADD USER\n                            </Button>\n                        </form>\n                    </div>\n                </Fade>\n            </Modal>\n        </TableContainer>\n    );\n}"]},"metadata":{},"sourceType":"module"}